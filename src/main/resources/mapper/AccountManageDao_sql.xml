<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ucar.combination.dao.AccountManageDao">

    <resultMap type="com.ucar.combination.model.Account" id="account">
        <result column="id" property="id"/>
        <result column="account_name" property="accountName"/>
        <result column="account_password" property="password"/>
        <result column="staff_id" property="staffId"/>
        <result column="staff_name" property="staffName"/>
        <result column="permissions" property="premissions"/>
        <result column="staff_email" property="staffEmail"/>
        <result column="account_secret_email" property="secretEmail"/>
        <result column="create_emp" property="creatEmpId"/>
        <result column="staff_num" property="staffNum"/>
        <result column="department_id" property="departmentId"/>
        <result column="department_name" property="department"/>
        <result column="create_emp_name" property="creatEmpName"/>
        <result column="create_time" property="createTime"/>
        <result column="creat_emp_name" property="creatEmpName"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_emp" property="modifyEmpId"/>
        <result column="modify_emp_name" property="modifyEmpName"/>
        <result column="modify_time" property="modifyTime"/>
        <result column="account_state" property="accountState"/>
        <result column="account_remark" property="remark"/>
    </resultMap>

    <select id="selectAccountById" parameterType="String" resultMap="account">
        select t1.id,
               t1.account_name,
               t1.account_state,
               t1.permissions,
               t2.id staff_id,
               t2.staff_num,
               t2.staff_name,
               t1.account_secret_email,
               t2.staff_email,
               t1.create_time,
               t3.account_name creat_emp_name,
               t1.modify_time,
               t4.account_name modify_emp_name,
               t1.account_remark
        from t_account t1
                 LEFT JOIN t_staff t2
                           ON t1.id = t2.account_id
                 LEFT JOIN t_account t3
                           ON t1.create_emp = t3.id
                 LEFT JOIN t_account t4
                           ON t1.modify_emp = t4.id
        WHERE t1.id = #{id}
    </select>

    <!-- 通过账户id查询账户数据-->
    <select id="selectIdByNum" parameterType="String" resultType="Long">
        SELECT id FROM t_account
        WHERE account_name = #{accountNum}
    </select>

    <insert id="insertAccount" parameterType="com.ucar.combination.model.AccountStaff">
        INSERT INTO t_account(
            account_name,
            account_password,
            staff_id,
            permissions,
            account_secret_email,
            create_time,
            create_emp,
            modify_time,
            modify_emp,
            account_remark
        )VALUES(
                #{accountName},
                #{password},
                #{staffId},
                #{permissions},
                #{secretEmail},
                NOW(),
                #{createEmp},
                NOW(),
                #{modifyEmp},
                #{remark}
        )
    </insert>
    <select id="queryList" resultMap="account">
        SELECT t1.id,
               t2.id staff_id,
               t1.account_name,
               t2.staff_name,
               t2.staff_num,
               t3.department_name,
               t1.permissions,
               t4.account_name modify_emp_name,
               t1.modify_time,
               t1.account_state
        FROM t_account t1
                 LEFT JOIN t_staff t2
                           ON (t1.id = t2.account_id)
                 LEFT JOIN t_account t4
                           ON (t1.modify_emp = t4.id)
                 LEFT JOIN t_department t3
                           ON (t2.department_id = t3.id)
        WHERE t1.account_state != 0
        <if test="accountName != null and accountName.trim() != ''">
          and t1.account_name = #{accountName}
        </if>
        <if test="staffName != null and staffName.trim() != ''">
          and t2.staff_name = #{staffName}
        </if>
        <if test="staffNum != null and staffNum.trim() != ''">
          and t2.staff_num = #{staffNum}
        </if>
        <if test="permissions != null and permissions.trim() != ''">
          and t1.permissions = #{permissions}
        </if>
        <if test="departmentId != null and departmentId.trim() != ''">
            and t3.id = #{departmentId}
        </if>
        <if test="isRelStaff == 1 ">
            and t1.staff_id != 0
        </if>
        <if test="isRelStaff == 0 ">
            and t1.staff_id = 0
        </if>
        <if test="accountState != null and accountState.trim() != ''">
            and t1.account_state = #{accountState}
        </if>
        <if test="filterIds != null">
            and t1.id not in <foreach collection="filterIds" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
        </if>
        ORDER BY modify_time DESC
    </select>
    <select id="selectById" parameterType="java.lang.Long" resultType="com.ucar.combination.model.Account">
        SELECT T.id,
                T.account_name,
                T.account_password,
                T.staff_id,
                T.permissions,
                T.account_secret_email,
                T.create_time,
                T.create_emp,
                T.modify_time,
                T.modify_emp,
                T.account_state,
                T.account_remark
                FROM t_account T
                  where T.id=#{id};

    </select>
    <resultMap type="com.ucar.combination.model.RoleAccount" id="RoleAccount">
        <result column="id" property="id"/>
        <result column="role_name" property="roleName"/>
        <result column="business_line" property="businessLine"/>
        <result column="account_name" property="accountName"/>
        <result column="staff_num" property="staffNum"/>
        <result column="staff_name" property="staffName"/>
        <result column="department_name" property="departmentName"/>
        <result column="role_status" property="roleStatus"/>
        <result column="account_state" property="accountState"/>
    </resultMap>
    <select id="getRoleAccountList" resultMap="RoleAccount">
        select
        a.id,a.role_name,a.business_line,c.account_name,d.staff_num,d.staff_name,e.department_name,a.role_status,c.account_state
        from t_role_info a,t_r_account_role b,t_account c,t_staff d,t_department e
        where b.role_id = a.id and b.account_id = c.id and c.staff_id = d.id and d.department_id = e.id
        <if test="roleName != null and roleName.trim() != ''">
            and role_name = #{roleName}
        </if>
        <if test="businessLine != null and businessLine.trim() != ''">
            and business_line = #{businessLine}
        </if>
        <if test="accountName != null and accountName.trim() != ''">
            and account_name = #{accountName}
        </if>
        <if test="staffNum != null and staffNum.trim() != ''">
            and staff_num = #{staffNum}
        </if>
        <if test="staffName != null and staffName.trim() != ''">
            and staff_name = #{staffName}
        </if>
        <if test="roleStatus != null and roleStatus.trim() != ''">
            and role_status = #{roleStatus}
        </if>
        <if test="accountState != null and accountState.trim() != ''">
        and account_state = #{accountState}
        </if>
        <if test="departmentName != null and departmentName.trim() != ''">
        and  department_name = #{departmentName}
        </if>
    </select>

    <update id="updateStatus">
        update t_account t1
        set t1.account_state=#{status}
        where t1.id = #{id}
    </update>
    <update id="updateState" parameterType="java.lang.String">
        UPDATE t_account T set T.account_state=0 WHERE T.id=#{id};
    </update>

    <insert id="insertAccountHistory" parameterType="com.ucar.combination.model.AccountStaff">
        insert into t_account_history(
            account_id,
            staff_num,
            staff_name,
            permissions,
            history_operation_type,
            create_emp,
            create_time,
            account_state
        )
        values(
            #{accountId},
            #{staffNum},
            #{staffName},
            #{permissions},
            #{operationType},
            #{createEmp},
            now(),
            #{accountState}
        )
    </insert>

    <!-- description: 根据id修改account信息
 	  @author junqiang.zhang@ucarinc.com
 	 -->
    <update id="modifyAccount" parameterType="com.ucar.combination.model.AccountStaff"  >
        UPDATE t_account
        SET staff_id = #{staffId},
            permissions = #{permissions},
            account_secret_email = #{secretEmail},
            modify_emp = #{modifyEmp},
            modify_time = NOW(),
            account_remark = #{remark}
        where id = #{accountId};
    </update>

    <!-- description: 手动选择数据权限新增
 	  @author junqiang.zhang@ucarinc.com
 	 -->
    <insert id="insertDepartmentPower" parameterType="com.ucar.combination.model.DepartmentPower">
        INSERT INTO  t_r_department_power( account_id,department_id )
        VALUES
        <foreach collection="departmentId"  item="item" separator=",">
            (#{accountId},#{item})
        </foreach>
    </insert>
    <!-- description: 手动选择数据权限删除权限
 	  @author junqiang.zhang@ucarinc.com-->
    <delete id="deleteDepartmentPower" parameterType="Long">
        DELETE from t_r_department_power
        WHERE account_id = #{accountId}
    </delete>
     <!-- * description: 查询账户的部门权限
     * @author junqiang.zhang@ucarinc.com-->
    <select id="selectDeparentPowerByAccountId" parameterType="Long" resultType="String">
        SELECT department_id
        FROM t_r_department_power
        WHERE account_id = #{accountId}
    </select>
    <!-- * description: 删除账户（状态改为无效）
     * @author junqiang.zhang@ucarinc.com-->
    <update id="deleteAccountById" parameterType="com.ucar.combination.model.AccountStaff">
        UPDATE t_account
        SET account_state = 3,
            modify_emp = #{modifyEmp},
            modify_time = NOW()
        WHERE id = #{accountId}
    </update>

    <!-- * description: 查询数据（部门）权限类型
     * @author kaitian.zheng@ucarinc.com -->
    <select id="selectPermissionsById" resultType="Integer">
        SELECT permissions FROM t_account WHERE id=#{id}
    </select>

    <select id="selectAccountInfoById" parameterType="Integer" resultType="com.ucar.combination.model.AccountHistory">
        select ac.id as account_id,ac.create_emp,ac.create_time,ac.permissions,st.staff_name,st.staff_num
        from
        t_account ac, t_staff st
        WHERE
        ac.staff_id=st.id
        And
        ac.id=#{id}
    </select>

    <update id="updateModifyTimeAndModifyName" parameterType="com.ucar.combination.model.Account">
        update t_account t1
        set t1.modify_emp=#{a.modifyEmpId},t1.modify_time=#{a.modifyTime}
        where t1.id = #{a.id}
    </update>
    <!-- description: 查询账户名是否存在-->
    <!-- * @author junqiang.zhang@ucarinc.com-->
    <select id="selectAccountByAccountName" parameterType="String" resultType="String">
        select account_name
        from t_account
        WHERE account_name = #{AccountName}
    </select>

</mapper>


