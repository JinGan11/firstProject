<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ucar.combination.dao.AccountManageDao">

    <resultMap type="com.ucar.combination.model.Account" id="account">
        <result column="id" property="id"/>
        <result column="account_name" property="accountName"/>
        <result column="account_password" property="password"/>
        <result column="staff_id" property="staffId"/>
        <result column="staff_name" property="staffName"/>
        <result column="permissions" property="premissions"/>
        <result column="account_secret_email" property="secretEmail"/>
        <result column="create_emp" property="creatEmpId"/>
        <result column="staff_num" property="staffNum"/>
        <result column="department_id" property="departmentId"/>
        <result column="department_name" property="department"/>
        <result column="create_emp_name" property="creatEmpName"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_emp" property="modifyEmpId"/>
        <result column="modify_emp_name" property="modifyEmpName"/>
        <result column="modify_time" property="modifyTime"/>
        <result column="account_state" property="accountState"/>
        <result column="account_remark" property="remark"/>
    </resultMap>
    <select id="selectIdByNum" parameterType="String" resultType="Long">
        SELECT id FROM t_account
        WHERE account_name = #{accountNum}
    </select>

    <insert id="insertAccount">
        INSERT INTO t_account(
            account_name,
            account_password,
            staff_id,
            permissions,
            create_time,
            create_emp,
            modify_time,
            modify_emp
        )VALUES(
                #{accountNum},
                #{password},
                #{staffId},
                #{permissions},
                NOW(),
                #{createEmp},
                NOW(),
                #{modifyEmp}
        )
    </insert>
    <select id="queryList" resultMap="account">
        SELECT t1.id,
               account_name,
               t2.staff_name,
               t2.staff_num,
               t3.department_name,
               permissions,
               t4.staff_name modify_emp_name,
               t1.modify_time,
               account_state
        FROM t_account t1
                 LEFT JOIN t_staff t2
                           ON (t1.id = t2.account_id)
                 LEFT JOIN t_staff t4
                           ON (t1.modify_emp = t4.id)
                 LEFT JOIN t_department t3
                           ON (t2.department_id = t3.id)
        WHERE account_state != 0
        <if test="accountName != null and accountName.trim() != ''">
          and account_name = #{accountName}
        </if>
        <if test="staffName != null and staffName.trim() != ''">
          and t2.staff_name = #{staffName}
        </if>
        <if test="staffNum != null and staffNum.trim() != ''">
          and t2.staff_num = #{staffNum}
        </if>
        <if test="permissions != null and permissions.trim() != ''">
          and permissions = #{permissions}
        </if>
        <if test="departmentId != null and departmentId.trim() != ''">
            and t3.id = #{departmentId}
        </if>
        <if test="isRelStaff == 1 ">
            and t1.staff_id != 0
        </if>
        <if test="isRelStaff == 0 ">
            and t1.staff_id = 0
        </if>
        <if test="accountState != null and accountState.trim() != ''">
            and account_state = #{accountState}
        </if>
        ORDER BY id
    </select>
    <resultMap type="com.ucar.combination.model.RoleAccount" id="RoleAccount">
        <result column="id" property="id"/>
        <result column="role_name" property="roleName"/>
        <result column="business_line" property="businessLine"/>
        <result column="account_name" property="accountName"/>
        <result column="staff_num" property="staffNum"/>
        <result column="staff_name" property="staffName"/>
        <result column="department_name" property="departmentName"/>
        <result column="role_status" property="roleStatus"/>
        <result column="account_state" property="accountState"/>
    </resultMap>
    <select id="getRoleAccountList" resultMap="RoleAccount">
        select
        a.id,a.role_name,a.business_line,c.account_name,d.staff_num,d.staff_name,e.department_name,a.role_status,c.account_state
        from t_role_info a,t_r_account_role b,t_account c,t_staff d,t_department e
        where b.role_id = a.id and b.account_id = c.id and c.staff_id = d.id and d.department_id = e.id
        <if test="roleName != null and roleName.trim() != ''">
            and role_name = #{roleName}
        </if>
        <if test="businessLine != null and businessLine.trim() != ''">
            and business_line = #{businessLine}
        </if>
        <if test="accountName != null and accountName.trim() != ''">
            and account_name = #{accountName}
        </if>
        <if test="staffNum != null and staffNum.trim() != ''">
            and staff_num = #{staffNum}
        </if>
        <if test="staffName != null and staffName.trim() != ''">
            and staff_name = #{staffName}
        </if>
        <if test="roleStatus != null and roleStatus.trim() != ''">
            and role_status = #{roleStatus}
        </if>
        <if test="accountState != null and accountState.trim() != ''">
        and account_state = #{accountState}
        </if>
        <if test="departmentName != null and departmentName.trim() != ''">
        and  department_name = #{departmentName}
        </if>
    </select>

    <update id="updateStatus">
        update t_account t1
        set t1.account_state=3
        where t1.id = #{id}
    </update>

    <insert id="insertAccountHistory" parameterType="map">
        insert into t_account_history(
            account_id,
            staff_num,
            staff_name,
            permissions,
            history_operation_type,
            create_emp,
            create_time,
            account_state
        )
        values(
            #{accountId},
            #{staffNum},
            #{staffName},
            #{permissions},
            #{historyOperationType},
            #{createEmp},
            now(),
            #{accountState}
        )
    </insert>
</mapper>


