<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ucar.combination.dao.EmployeeManageDao">

    <!--修改员工的账户信息-->
    <update id="updateAccount" parameterType="com.ucar.combination.model.AccountStaff">
        UPDATE t_staff
        SET account_id = #{accountId}
        ,modify_time = NOW()
        ,modify_emp = #{modifyEmp}
        <if test="secretEmail != null and secretEmail.trim() != ''">
            ,staff_email = #{secretEmail}
        </if>
        WHERE id = #{staffId};
    </update>

    <select id="queryList" resultType="com.ucar.combination.model.dto.StaffDto">
        SELECT
        t1.id id,
        t1.staff_num staffNum,
        t3.account_name,
        t1.account_id accountId,
        t1.staff_name staffName,
        t1.staff_sex staffSex,
        t1.staff_telephone staffTelephone,
        t1.staff_email staffEmail,
        t1.department_id departmentId,
        t1.is_dimission isDimission,
        t1.create_time createTime,
        t1.create_emp  createEmp,
        t2.upper_department_no upperDepartmentNo,
        t2.department_name departmentName,
        t4.department_name upperDepartmentName,
        t1.create_emp createEmp,
        t1.modify_emp modifyEmp,
        t1.modify_time modifyTime,
        t1.remark remark
        FROM t_staff t1
        LEFT JOIN t_account t3
        on (t3.id=t1.account_id)
        ,t_department t2,t_department t4
        where t1.department_id = t2.id and t2.upper_department_no=t4.department_no and t1.status=1
        <if test="userPermission == 4">
            and t1.id = #{accountId}
        </if>
        <if test="userPermission == 2 or userPermission == 3 or userPermission == 5 ">
            and t1.department_id in
            <foreach collection="departmentIdList" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
        </if>
        <if test="relAccount == 1">
            AND (t1.account_id = '' or t1.account_id IS NULL or t1.account_id = 0)
        </if>
        <if test="satff_num != null and satff_num.trim() != ''">
            AND t1.staff_num =#{satff_num}
        </if>
        <if test="staff_name != null and staff_name.trim() != ''">
            AND t1.staff_name =#{staff_name}
        </if>
        <if test="accountName != null and accountName.trim() != ''">
            AND t3.account_name=#{accountName}
        </if>
        <if test="is_dimission != null and is_dimission.trim() != ''">
            AND t1.is_dimission =#{is_dimission}
        </if>
        <if test="upper_department_no != null and upper_department_no.trim() != ''">
            AND t2.upper_department_no =#{upper_department_no}
        </if>
        <if test="department != null and department.trim() != ''">
            AND t1.department_id =#{department}
        </if>
        <if test="upper_department_no != null and upper_department_no.trim() != ''">
            AND t2.upper_department_no =#{upper_department_no}
        </if>
        ORDER BY createTime DESC
    </select>

    <select id="selectById" parameterType="java.lang.String" resultType="com.ucar.combination.model.Staff">
        SELECT T.id,
                T.staff_num,
                T.staff_name,
                T.staff_sex,
                T.staff_telephone,
                T.staff_email,
                T.department_id,
                T.is_dimission,
                T.status,
                T.create_time,
                T.create_emp,
                T.modify_time,
                T.modify_emp,
                T.remark,
                T.account_id
                from t_staff T
                where T.id=#{id};
    </select>
    <select id="qryStaffById" parameterType="com.ucar.combination.model.User"
            resultType="com.ucar.combination.model.Staff">
        SELECT
        ts.id,
        ts.staff_num,
        ts.staff_name,
        ts.staff_sex,
        ts.staff_telephone,
        ts.staff_email,
        ts.department_id,
        ts.is_dimission ,
        td.department_name
        FROM t_staff ts,t_department td
        where ts.department_id = td.id
        and ts.id = #{staffId}
    </select>
    <insert id="insertStaff" parameterType="com.ucar.combination.model.Staff">
        insert into t_staff(staff_num,staff_name,staff_sex,staff_telephone,staff_email,department_id,is_dimission,status, create_time, create_emp, modify_time, modify_emp,remark)
        value(#{staffNum}, #{staffName},#{staffSex},#{staffTelephone},#{staffEmail},#{departmentId},0,1, NOW(),#{createEmp},NOW(),#{modifyEmp},#{remark})
    </insert>
    <update id="updateStatus">
        update t_staff t1
        set t1.status=0
        where t1.id = #{id}
    </update>
    <update id="updateDimission" parameterType="java.lang.String">
        UPDATE t_staff T set T.is_dimission=1 WHERE T.id=#{id};
    </update>

    <update id="updateDimissionRecovery" parameterType="java.lang.String">
        UPDATE t_staff T set T.is_dimission=0 WHERE T.id=#{id};
    </update>
    <update id="updateStaff" parameterType="com.ucar.combination.model.Staff">
       update t_staff t1
       set
        t1.staff_num=#{staffNum},
        t1.staff_name=#{staffName},
        t1.staff_sex=#{staffSex},
        t1.staff_telephone=#{staffTelephone},
        t1.staff_email=#{staffEmail},
        t1.department_id=#{departmentId},
        t1.modify_time=NOW(),
        t1.modify_emp=#{modifyEmp},
        t1.remark=#{remark}
        where  t1.id=#{id}
    </update>

    <select id="selectDepartmentId" resultType="Long">
        SELECT department_id FROM t_staff WHERE account_id=#{id}
    </select>
    <select id="selectAllStaffName" resultType="java.lang.String">
        select staff_num
        from t_staff
    </select>

    <select id="getCreateInfo" parameterType="long" resultType="java.util.Map">
        select
        t1.account_name accountName,
        t3.staff_name staffName
        from t_account t1,t_staff t2,t_staff t3
        WHERE t2.create_emp=t1.id and t1.staff_id=t3.id and t2.id=#{staffId}
    </select>
    <select id="getModifyInfo" parameterType="long" resultType="java.util.Map">
        select
        t1.account_name accountName,
        t3.staff_name staffName
        from t_account t1,t_staff t2,t_staff t3
        WHERE t2.modify_emp=t1.id and t1.staff_id=t3.id and t2.id=#{staffId}
    </select>
    <select id="getCreateEmpById" parameterType="long" resultType="string">
        SELECT
        t1.account_name
        FROM  t_account t1,t_staff t2
        <where>
            t2.id =#{staffId} and t2.create_emp=t1.id
        </where>
    </select>
    <select id="getModifyEmpById" parameterType="long" resultType="string">
        SELECT
        t1.account_name
        FROM  t_account t1,t_staff t2
        <where>
            t2.id =#{staffId} and t2.modify_emp=t1.id
        </where>
    </select>
    <select id="getCreateStaffId" parameterType="long" resultType="Long">
        SELECT
        t2.staff_id staffId
        from t_staff t1,t_account t2
        WHERE t1.id=#{staffId} and t1.create_emp=t2.id
    </select>
    <select id="getModifyStaffId" parameterType="long" resultType="Long">
        SELECT
        t2.staff_id staffId
        from t_staff t1,t_account t2
        WHERE t1.id=#{staffId} and t1.modify_emp=t2.id
    </select>

    <update id="updateDepartmentByEmployee">
        update t_staff T set T.department_id=#{departmentId} where T.id=#{id}
    </update>

</mapper>
